// <auto-generated />
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 618
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998
[assembly: global::Orleans.Metadata.FeaturePopulatorAttribute(typeof (OrleansGeneratedCode.OrleansCodeGen4a6d9e2111FeaturePopulator))]
[assembly: global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0")]
[assembly: global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute(@"Orleans2GettingStarted, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
namespace Orleans2GettingStarted
{
    using global::Orleans;
    using global::System.Reflection;

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof (global::Orleans2GettingStarted.IController))]
    internal class OrleansCodeGenControllerReference : global::Orleans.Runtime.GrainReference, global::Orleans2GettingStarted.IController
    {
        protected OrleansCodeGenControllerReference(global::Orleans.Runtime.GrainReference other): base (other)
        {
        }

        OrleansCodeGenControllerReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions): base (other, invokeMethodOptions)
        {
        }

        protected OrleansCodeGenControllerReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context): base (info, context)
        {
        }

        public override global::System.Int32 InterfaceId
        {
            get
            {
                return 2002060537;
            }
        }

        public override global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }

        public override global::System.String InterfaceName
        {
            get
            {
                return @"global::Orleans2GettingStarted.IController";
            }
        }

        public override global::System.Boolean IsCompatible(global::System.Int32 interfaceId)
        {
            return interfaceId == 2002060537;
        }

        public override global::System.String GetMethodName(global::System.Int32 interfaceId, global::System.Int32 methodId)
        {
            switch (interfaceId)
            {
                case 2002060537:
                    switch (methodId)
                    {
                        case -780474008:
                            return @"Init";
                        case -873254251:
                            return @"PauseAllPrevNodes";
                        case -244396622:
                            return @"ResumeAllPrevNodes";
                        case -1657476504:
                            return @"AddNodeNotify";
                        case -1256896228:
                            return @"GetName";
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + 2002060537 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> Init(global::System.Collections.Generic.List<global::Orleans2GettingStarted.ILayer> children, global::Orleans2GettingStarted.IController left)
        {
            return base.InvokeMethodAsync<global::System.Boolean>(-780474008, new global::System.Object[]{children, left is global::Orleans.Grain ? left.AsReference<global::Orleans2GettingStarted.IController>() : left});
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> PauseAllPrevNodes(global::Orleans2GettingStarted.ILayer cur)
        {
            return base.InvokeMethodAsync<global::System.Boolean>(-873254251, new global::System.Object[]{cur is global::Orleans.Grain ? cur.AsReference<global::Orleans2GettingStarted.ILayer>() : cur});
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> ResumeAllPrevNodes(global::Orleans2GettingStarted.ILayer cur)
        {
            return base.InvokeMethodAsync<global::System.Boolean>(-244396622, new global::System.Object[]{cur is global::Orleans.Grain ? cur.AsReference<global::Orleans2GettingStarted.ILayer>() : cur});
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> AddNodeNotify(global::Orleans2GettingStarted.ILayer cur)
        {
            return base.InvokeMethodAsync<global::System.Boolean>(-1657476504, new global::System.Object[]{cur is global::Orleans.Grain ? cur.AsReference<global::Orleans2GettingStarted.ILayer>() : cur});
        }

        public global::System.Threading.Tasks.Task<global::System.String> GetName()
        {
            return base.InvokeMethodAsync<global::System.String>(-1256896228, null);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof (global::Orleans2GettingStarted.IController), 2002060537), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenControllerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<global::System.Object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            global::System.Int32 interfaceId = request.InterfaceId;
            global::System.Int32 methodId = request.MethodId;
            global::System.Object[] arguments = request.Arguments;
            if (grain == null)
                throw new global::System.ArgumentNullException(@"grain");
            switch (interfaceId)
            {
                case 2002060537:
                    switch (methodId)
                    {
                        case -780474008:
                            return await ((global::Orleans2GettingStarted.IController)grain).Init((global::System.Collections.Generic.List<global::Orleans2GettingStarted.ILayer>)arguments[0], (global::Orleans2GettingStarted.IController)arguments[1]);
                        case -873254251:
                            return await ((global::Orleans2GettingStarted.IController)grain).PauseAllPrevNodes((global::Orleans2GettingStarted.ILayer)arguments[0]);
                        case -244396622:
                            return await ((global::Orleans2GettingStarted.IController)grain).ResumeAllPrevNodes((global::Orleans2GettingStarted.ILayer)arguments[0]);
                        case -1657476504:
                            return await ((global::Orleans2GettingStarted.IController)grain).AddNodeNotify((global::Orleans2GettingStarted.ILayer)arguments[0]);
                        case -1256896228:
                            return await ((global::Orleans2GettingStarted.IController)grain).GetName();
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + 2002060537 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Int32 InterfaceId
        {
            get
            {
                return 2002060537;
            }
        }

        public global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof (global::Orleans2GettingStarted.ILayer))]
    internal class OrleansCodeGenLayerReference : global::Orleans.Runtime.GrainReference, global::Orleans2GettingStarted.ILayer
    {
        protected OrleansCodeGenLayerReference(global::Orleans.Runtime.GrainReference other): base (other)
        {
        }

        OrleansCodeGenLayerReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions): base (other, invokeMethodOptions)
        {
        }

        protected OrleansCodeGenLayerReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context): base (info, context)
        {
        }

        public override global::System.Int32 InterfaceId
        {
            get
            {
                return 1743182390;
            }
        }

        public override global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }

        public override global::System.String InterfaceName
        {
            get
            {
                return @"global::Orleans2GettingStarted.ILayer";
            }
        }

        public override global::System.Boolean IsCompatible(global::System.Int32 interfaceId)
        {
            return interfaceId == 1743182390;
        }

        public override global::System.String GetMethodName(global::System.Int32 interfaceId, global::System.Int32 methodId)
        {
            switch (interfaceId)
            {
                case 1743182390:
                    switch (methodId)
                    {
                        case -823456715:
                            return @"Init";
                        case 285593471:
                            return @"AddInNode";
                        case -1797983613:
                            return @"AddOutNode";
                        case 998372295:
                            return @"Pause";
                        case 945887006:
                            return @"Resume";
                        case 1953164537:
                            return @"AllocateNode";
                        case -1256896228:
                            return @"GetName";
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + 1743182390 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> Init(global::Orleans2GettingStarted.ILayer prev, global::System.Collections.Generic.List<global::Orleans2GettingStarted.IOperator> children, global::Orleans2GettingStarted.IController up)
        {
            return base.InvokeMethodAsync<global::System.Boolean>(-823456715, new global::System.Object[]{prev is global::Orleans.Grain ? prev.AsReference<global::Orleans2GettingStarted.ILayer>() : prev, children, up is global::Orleans.Grain ? up.AsReference<global::Orleans2GettingStarted.IController>() : up});
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> AddInNode()
        {
            return base.InvokeMethodAsync<global::System.Boolean>(285593471, null);
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> AddOutNode(global::Orleans2GettingStarted.IOperator node)
        {
            return base.InvokeMethodAsync<global::System.Boolean>(-1797983613, new global::System.Object[]{node is global::Orleans.Grain ? node.AsReference<global::Orleans2GettingStarted.IOperator>() : node});
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> Pause()
        {
            return base.InvokeMethodAsync<global::System.Boolean>(998372295, null);
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> Resume()
        {
            return base.InvokeMethodAsync<global::System.Boolean>(945887006, null);
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> AllocateNode()
        {
            return base.InvokeMethodAsync<global::System.Boolean>(1953164537, null);
        }

        public global::System.Threading.Tasks.Task<global::System.String> GetName()
        {
            return base.InvokeMethodAsync<global::System.String>(-1256896228, null);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof (global::Orleans2GettingStarted.ILayer), 1743182390), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenLayerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<global::System.Object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            global::System.Int32 interfaceId = request.InterfaceId;
            global::System.Int32 methodId = request.MethodId;
            global::System.Object[] arguments = request.Arguments;
            if (grain == null)
                throw new global::System.ArgumentNullException(@"grain");
            switch (interfaceId)
            {
                case 1743182390:
                    switch (methodId)
                    {
                        case -823456715:
                            return await ((global::Orleans2GettingStarted.ILayer)grain).Init((global::Orleans2GettingStarted.ILayer)arguments[0], (global::System.Collections.Generic.List<global::Orleans2GettingStarted.IOperator>)arguments[1], (global::Orleans2GettingStarted.IController)arguments[2]);
                        case 285593471:
                            return await ((global::Orleans2GettingStarted.ILayer)grain).AddInNode();
                        case -1797983613:
                            return await ((global::Orleans2GettingStarted.ILayer)grain).AddOutNode((global::Orleans2GettingStarted.IOperator)arguments[0]);
                        case 998372295:
                            return await ((global::Orleans2GettingStarted.ILayer)grain).Pause();
                        case 945887006:
                            return await ((global::Orleans2GettingStarted.ILayer)grain).Resume();
                        case 1953164537:
                            return await ((global::Orleans2GettingStarted.ILayer)grain).AllocateNode();
                        case -1256896228:
                            return await ((global::Orleans2GettingStarted.ILayer)grain).GetName();
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + 1743182390 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Int32 InterfaceId
        {
            get
            {
                return 1743182390;
            }
        }

        public global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof (global::Orleans2GettingStarted.IOperator))]
    internal class OrleansCodeGenOperatorReference : global::Orleans.Runtime.GrainReference, global::Orleans2GettingStarted.IOperator
    {
        protected OrleansCodeGenOperatorReference(global::Orleans.Runtime.GrainReference other): base (other)
        {
        }

        OrleansCodeGenOperatorReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions): base (other, invokeMethodOptions)
        {
        }

        protected OrleansCodeGenOperatorReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context): base (info, context)
        {
        }

        public override global::System.Int32 InterfaceId
        {
            get
            {
                return -1092391309;
            }
        }

        public override global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }

        public override global::System.String InterfaceName
        {
            get
            {
                return @"global::Orleans2GettingStarted.IOperator";
            }
        }

        public override global::System.Boolean IsCompatible(global::System.Int32 interfaceId)
        {
            return interfaceId == -1092391309;
        }

        public override global::System.String GetMethodName(global::System.Int32 interfaceId, global::System.Int32 methodId)
        {
            switch (interfaceId)
            {
                case -1092391309:
                    switch (methodId)
                    {
                        case -1732790602:
                            return @"Init";
                        case 426148296:
                            return @"DoWork";
                        case -32553730:
                            return @"RegisterOutNode";
                        case 998372295:
                            return @"Pause";
                        case 945887006:
                            return @"Resume";
                        case -1256896228:
                            return @"GetName";
                        case 787982236:
                            return @"GetPartialWorkLoad";
                        case 512959570:
                            return @"ReceivePartialWorkLoad";
                        case -1958231350:
                            return @"GetOutNodes";
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1092391309 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> Init(global::System.Collections.Generic.List<global::Orleans2GettingStarted.IOperator> out_nodes, global::System.Boolean paused)
        {
            return base.InvokeMethodAsync<global::System.Boolean>(-1732790602, new global::System.Object[]{out_nodes, paused});
        }

        public global::System.Threading.Tasks.Task DoWork(global::System.Object in_obj)
        {
            return base.InvokeMethodAsync<global::System.Object>(426148296, new global::System.Object[]{in_obj});
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> RegisterOutNode(global::Orleans2GettingStarted.IOperator node)
        {
            return base.InvokeMethodAsync<global::System.Boolean>(-32553730, new global::System.Object[]{node is global::Orleans.Grain ? node.AsReference<global::Orleans2GettingStarted.IOperator>() : node});
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> Pause()
        {
            return base.InvokeMethodAsync<global::System.Boolean>(998372295, null);
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> Resume()
        {
            return base.InvokeMethodAsync<global::System.Boolean>(945887006, null);
        }

        public global::System.Threading.Tasks.Task<global::System.String> GetName()
        {
            return base.InvokeMethodAsync<global::System.String>(-1256896228, null);
        }

        public global::System.Threading.Tasks.Task<global::System.Collections.Generic.List<global::System.Object>> GetPartialWorkLoad(global::System.Single percentage)
        {
            return base.InvokeMethodAsync<global::System.Collections.Generic.List<global::System.Object>>(787982236, new global::System.Object[]{percentage});
        }

        public global::System.Threading.Tasks.Task<global::System.Boolean> ReceivePartialWorkLoad(global::System.Collections.Generic.List<global::System.Object> workload)
        {
            return base.InvokeMethodAsync<global::System.Boolean>(512959570, new global::System.Object[]{workload});
        }

        public global::System.Threading.Tasks.Task<global::System.Collections.Generic.List<global::Orleans2GettingStarted.IOperator>> GetOutNodes()
        {
            return base.InvokeMethodAsync<global::System.Collections.Generic.List<global::Orleans2GettingStarted.IOperator>>(-1958231350, null);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof (global::Orleans2GettingStarted.IOperator), -1092391309), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenOperatorMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<global::System.Object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            global::System.Int32 interfaceId = request.InterfaceId;
            global::System.Int32 methodId = request.MethodId;
            global::System.Object[] arguments = request.Arguments;
            if (grain == null)
                throw new global::System.ArgumentNullException(@"grain");
            switch (interfaceId)
            {
                case -1092391309:
                    switch (methodId)
                    {
                        case -1732790602:
                            return await ((global::Orleans2GettingStarted.IOperator)grain).Init((global::System.Collections.Generic.List<global::Orleans2GettingStarted.IOperator>)arguments[0], (global::System.Boolean)arguments[1]);
                        case 426148296:
                            await ((global::Orleans2GettingStarted.IOperator)grain).DoWork((global::System.Object)arguments[0]);
                            return null;
                        case -32553730:
                            return await ((global::Orleans2GettingStarted.IOperator)grain).RegisterOutNode((global::Orleans2GettingStarted.IOperator)arguments[0]);
                        case 998372295:
                            return await ((global::Orleans2GettingStarted.IOperator)grain).Pause();
                        case 945887006:
                            return await ((global::Orleans2GettingStarted.IOperator)grain).Resume();
                        case -1256896228:
                            return await ((global::Orleans2GettingStarted.IOperator)grain).GetName();
                        case 787982236:
                            return await ((global::Orleans2GettingStarted.IOperator)grain).GetPartialWorkLoad((global::System.Single)arguments[0]);
                        case 512959570:
                            return await ((global::Orleans2GettingStarted.IOperator)grain).ReceivePartialWorkLoad((global::System.Collections.Generic.List<global::System.Object>)arguments[0]);
                        case -1958231350:
                            return await ((global::Orleans2GettingStarted.IOperator)grain).GetOutNodes();
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1092391309 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Int32 InterfaceId
        {
            get
            {
                return -1092391309;
            }
        }

        public global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }
    }
}

namespace OrleansGeneratedCode3844339
{
    using global::Orleans;
    using global::System.Reflection;
}

namespace OrleansGeneratedCode
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0")]
    internal sealed class OrleansCodeGen4a6d9e2111FeaturePopulator : global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainInterfaceFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainClassFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Serialization.SerializerFeature>
    {
        public void Populate(global::Orleans.Metadata.GrainInterfaceFeature feature)
        {
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof (global::Orleans2GettingStarted.IController), typeof (Orleans2GettingStarted.OrleansCodeGenControllerReference), typeof (Orleans2GettingStarted.OrleansCodeGenControllerMethodInvoker), 2002060537));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof (global::Orleans2GettingStarted.ILayer), typeof (Orleans2GettingStarted.OrleansCodeGenLayerReference), typeof (Orleans2GettingStarted.OrleansCodeGenLayerMethodInvoker), 1743182390));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof (global::Orleans2GettingStarted.IOperator), typeof (Orleans2GettingStarted.OrleansCodeGenOperatorReference), typeof (Orleans2GettingStarted.OrleansCodeGenOperatorMethodInvoker), -1092391309));
        }

        public void Populate(global::Orleans.Metadata.GrainClassFeature feature)
        {
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::Orleans2GettingStarted.Controller)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::Orleans2GettingStarted.Layer)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::Orleans2GettingStarted.Operator)));
        }

        public void Populate(global::Orleans.Serialization.SerializerFeature feature)
        {
            feature.AddKnownType(@"System.Action`9,System.Runtime", @"Action`9'9");
            feature.AddKnownType(@"System.Action`10,System.Runtime", @"Action`10'10");
            feature.AddKnownType(@"System.Action`11,System.Runtime", @"Action`11'11");
            feature.AddKnownType(@"System.Action`12,System.Runtime", @"Action`12'12");
            feature.AddKnownType(@"System.Action`13,System.Runtime", @"Action`13'13");
            feature.AddKnownType(@"System.Action`14,System.Runtime", @"Action`14'14");
            feature.AddKnownType(@"System.Action`15,System.Runtime", @"Action`15'15");
            feature.AddKnownType(@"System.Action`16,System.Runtime", @"Action`16'16");
            feature.AddKnownType(@"System.Func`10,System.Runtime", @"Func`10'10");
            feature.AddKnownType(@"System.Func`11,System.Runtime", @"Func`11'11");
            feature.AddKnownType(@"System.Func`12,System.Runtime", @"Func`12'12");
            feature.AddKnownType(@"System.Func`13,System.Runtime", @"Func`13'13");
            feature.AddKnownType(@"System.Func`14,System.Runtime", @"Func`14'14");
            feature.AddKnownType(@"System.Func`15,System.Runtime", @"Func`15'15");
            feature.AddKnownType(@"System.Func`16,System.Runtime", @"Func`16'16");
            feature.AddKnownType(@"System.Func`17,System.Runtime", @"Func`17'17");
            feature.AddKnownType(@"System.Lazy`2,System.Runtime", @"Lazy`2'2");
            feature.AddKnownType(@"System.Threading.WaitHandleExtensions,System.Runtime", @"WaitHandleExtensions");
            feature.AddKnownType(@"System.Runtime.AssemblyTargetedPatchBandAttribute,System.Runtime", @"AssemblyTargetedPatchBandAttribute");
            feature.AddKnownType(@"System.Runtime.TargetedPatchingOptOutAttribute,System.Runtime", @"TargetedPatchingOptOutAttribute");
            feature.AddKnownType(@"System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute,System.Runtime", @"PrePrepareMethodAttribute");
            feature.AddKnownType(@"System.Reflection.RuntimeReflectionExtensions,System.Runtime", @"RuntimeReflectionExtensions");
            feature.AddKnownType(@"System.IO.FileAttributes,System.Runtime", @"FileAttributes");
            feature.AddKnownType(@"System.IO.HandleInheritability,System.Runtime", @"HandleInheritability");
            feature.AddKnownType(@"FxResources.System.Collections.SR,System.Collections", @"FxResources.System.Collections.SR");
            feature.AddKnownType(@"System.SR,System.Collections", @"SR");
            feature.AddKnownType(@"System.Collections.BitArray,System.Collections", @"BitArray");
            feature.AddKnownType(@"System.Collections.StructuralComparisons,System.Collections", @"StructuralComparisons");
            feature.AddKnownType(@"System.Collections.StructuralEqualityComparer,System.Collections", @"StructuralEqualityComparer");
            feature.AddKnownType(@"System.Collections.StructuralComparer,System.Collections", @"StructuralComparer");
            feature.AddKnownType(@"System.Collections.HashHelpers,System.Collections", @"HashHelpers");
            feature.AddKnownType(@"System.Collections.Generic.BitHelper,System.Collections", @"BitHelper");
            feature.AddKnownType(@"System.Collections.Generic.CollectionExtensions,System.Collections", @"CollectionExtensions");
            feature.AddKnownType(@"System.Collections.Generic.ICollectionDebugView`1,System.Collections", @"ICollectionDebugView`1'1");
            feature.AddKnownType(@"System.Collections.Generic.IDictionaryDebugView`2,System.Collections", @"IDictionaryDebugView`2'2");
            feature.AddKnownType(@"System.Collections.Generic.DictionaryKeyCollectionDebugView`2,System.Collections", @"DictionaryKeyCollectionDebugView`2'2");
            feature.AddKnownType(@"System.Collections.Generic.DictionaryValueCollectionDebugView`2,System.Collections", @"DictionaryValueCollectionDebugView`2'2");
            feature.AddKnownType(@"System.Collections.Generic.HashSet`1+ElementCount,System.Collections", @"ElementCount'1");
            feature.AddKnownType(@"System.Collections.Generic.HashSet`1+Slot,System.Collections", @"Slot'1");
            feature.AddKnownType(@"System.Collections.Generic.HashSet`1+Enumerator,System.Collections", @"HashSet`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.HashSetEqualityComparer`1,System.Collections", @"HashSetEqualityComparer`1'1");
            feature.AddKnownType(@"System.Collections.Generic.LinkedList`1+Enumerator,System.Collections", @"LinkedList`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.LinkedListNode`1,System.Collections", @"LinkedListNode`1'1");
            feature.AddKnownType(@"System.Collections.Generic.Queue`1+Enumerator,System.Collections", @"Queue`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.QueueDebugView`1,System.Collections", @"QueueDebugView`1'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+Enumerator,System.Collections", @"SortedDictionary`2'2.Enumerator'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+KeyCollection,System.Collections", @"SortedDictionary`2'2.KeyCollection'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+KeyCollection+Enumerator,System.Collections", @"SortedDictionary`2'2.KeyCollection'2.Enumerator'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+ValueCollection,System.Collections", @"SortedDictionary`2'2.ValueCollection'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+ValueCollection+Enumerator,System.Collections", @"SortedDictionary`2'2.ValueCollection'2.Enumerator'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedDictionary`2+KeyValuePairComparer,System.Collections", @"SortedDictionary`2'2.KeyValuePairComparer'2");
            feature.AddKnownType(@"System.Collections.Generic.TreeSet`1,System.Collections", @"TreeSet`1'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedList`2+KeyList,System.Collections", @"SortedList`2'2.KeyList'2");
            feature.AddKnownType(@"System.Collections.Generic.SortedList`2+ValueList,System.Collections", @"SortedList`2'2.ValueList'2");
            feature.AddKnownType(@"System.Collections.Generic.TreeWalkPredicate`1,System.Collections", @"TreeWalkPredicate`1'1");
            feature.AddKnownType(@"System.Collections.Generic.TreeRotation,System.Collections", @"TreeRotation");
            feature.AddKnownType(@"System.Collections.Generic.SortedSet`1+Node,System.Collections", @"Node'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedSet`1+Enumerator,System.Collections", @"SortedSet`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedSet`1+ElementCount,System.Collections", @"ElementCount'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedSet`1+TreeSubSet,System.Collections", @"TreeSubSet'1");
            feature.AddKnownType(@"System.Collections.Generic.SortedSetEqualityComparer`1,System.Collections", @"SortedSetEqualityComparer`1'1");
            feature.AddKnownType(@"System.Collections.Generic.Stack`1+Enumerator,System.Collections", @"Stack`1'1.Enumerator'1");
            feature.AddKnownType(@"System.Collections.Generic.StackDebugView`1,System.Collections", @"StackDebugView`1'1");
            feature.AddKnownType(@"System.Collections.Generic.EnumerableHelpers,System.Collections", @"EnumerableHelpers");
            feature.AddKnownType(@"Interop,System.Console", @"Interop");
            feature.AddKnownType(@"Interop+Kernel32,System.Console", @"Kernel32");
            feature.AddKnownType(@"Interop+Kernel32+CONSOLE_CURSOR_INFO,System.Console", @"CONSOLE_CURSOR_INFO");
            feature.AddKnownType(@"Interop+Kernel32+CONSOLE_SCREEN_BUFFER_INFO,System.Console", @"CONSOLE_SCREEN_BUFFER_INFO");
            feature.AddKnownType(@"Interop+Kernel32+COORD,System.Console", @"COORD");
            feature.AddKnownType(@"Interop+Kernel32+SMALL_RECT,System.Console", @"SMALL_RECT");
            feature.AddKnownType(@"Interop+Kernel32+Color,System.Console", @"Color");
            feature.AddKnownType(@"Interop+Kernel32+CHAR_INFO,System.Console", @"CHAR_INFO");
            feature.AddKnownType(@"Interop+Kernel32+ConsoleCtrlHandlerRoutine,System.Console", @"ConsoleCtrlHandlerRoutine");
            feature.AddKnownType(@"Interop+BOOL,System.Console", @"BOOL");
            feature.AddKnownType(@"Interop+User32,System.Console", @"User32");
            feature.AddKnownType(@"Interop+KeyEventRecord,System.Console", @"KeyEventRecord");
            feature.AddKnownType(@"Interop+InputRecord,System.Console", @"InputRecord");
            feature.AddKnownType(@"FxResources.System.Console.SR,System.Console", @"FxResources.System.Console.SR");
            feature.AddKnownType(@"System.Console,System.Console", @"Console");
            feature.AddKnownType(@"System.ConsoleCancelEventHandler,System.Console", @"ConsoleCancelEventHandler");
            feature.AddKnownType(@"System.ConsoleCancelEventArgs,System.Console", @"ConsoleCancelEventArgs");
            feature.AddKnownType(@"System.ConsoleColor,System.Console", @"ConsoleColor");
            feature.AddKnownType(@"System.ConsoleSpecialKey,System.Console", @"ConsoleSpecialKey");
            feature.AddKnownType(@"System.ConsoleKey,System.Console", @"ConsoleKey");
            feature.AddKnownType(@"System.ConsoleKeyInfo,System.Console", @"ConsoleKeyInfo");
            feature.AddKnownType(@"System.ConsoleModifiers,System.Console", @"ConsoleModifiers");
            feature.AddKnownType(@"System.ConsolePal,System.Console", @"ConsolePal");
            feature.AddKnownType(@"System.ConsolePal+ControlKeyState,System.Console", @"ControlKeyState");
            feature.AddKnownType(@"System.IO.ConsoleStream,System.Console", @"ConsoleStream");
            feature.AddKnownType(@"System.ConsolePal+ControlCHandlerRegistrar,System.Console", @"ControlCHandlerRegistrar");
            feature.AddKnownType(@"System.SR,System.Console", @"SR");
            feature.AddKnownType(@"System.Text.ConsoleEncoding,System.Console", @"ConsoleEncoding");
            feature.AddKnownType(@"System.Text.OSEncoding,System.Console", @"OSEncoding");
            feature.AddKnownType(@"System.Text.OSEncoder,System.Console", @"OSEncoder");
            feature.AddKnownType(@"System.Text.DecoderDBCS,System.Console", @"DecoderDBCS");
            feature.AddKnownType(@"System.Text.EncodingHelper,System.Console", @"EncodingHelper");
            feature.AddKnownType(@"System.IO.SyncTextReader,System.Console", @"SyncTextReader");
            feature.AddKnownType(@"System.IO.SyncTextWriter,System.Console", @"SyncTextWriter");
            feature.AddKnownType(@"System.IO.Error,System.Console", @"Error");
            feature.AddKnownType(@"System.IO.Win32Marshal,System.Console", @"Win32Marshal");
            feature.AddKnownType(@"Orleans2GettingStarted.Controller,Orleans2GettingStarted", @"Orleans2GettingStarted.Controller");
            feature.AddKnownType(@"Orleans2GettingStarted.IController,Orleans2GettingStarted", @"Orleans2GettingStarted.IController");
            feature.AddKnownType(@"Orleans2GettingStarted.ILayer,Orleans2GettingStarted", @"Orleans2GettingStarted.ILayer");
            feature.AddKnownType(@"Orleans2GettingStarted.IOperator,Orleans2GettingStarted", @"Orleans2GettingStarted.IOperator");
            feature.AddKnownType(@"Orleans2GettingStarted.Layer,Orleans2GettingStarted", @"Orleans2GettingStarted.Layer");
            feature.AddKnownType(@"Orleans2GettingStarted.Operator,Orleans2GettingStarted", @"Orleans2GettingStarted.Operator");
            feature.AddKnownType(@"Orleans2GettingStarted.Program,Orleans2GettingStarted", @"Orleans2GettingStarted.Program");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.ConsoleLoggerExtensions,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.ConsoleLoggerExtensions");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.ConsoleLogger,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.ConsoleLogger");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.ConsoleLogScope,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.ConsoleLogScope");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.Internal.IConsole,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.Internal.IConsole");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.Internal.ConsoleLoggerProcessor,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.Internal.ConsoleLoggerProcessor");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.Internal.LogMessageEntry,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.Internal.LogMessageEntry");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.Internal.WindowsLogConsole,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.Internal.WindowsLogConsole");
            feature.AddKnownType(@"System.Diagnostics.DebuggerStepperBoundaryAttribute,System.Diagnostics.Debug", @"DebuggerStepperBoundaryAttribute");
            feature.AddKnownType(@"System.Diagnostics.DebuggerVisualizerAttribute,System.Diagnostics.Debug", @"DebuggerVisualizerAttribute");
            feature.AddKnownType(@"FxResources.System.Threading.Thread.SR,System.Threading.Thread", @"FxResources.System.Threading.Thread.SR");
            feature.AddKnownType(@"System.LocalDataStoreSlot,System.Threading.Thread", @"LocalDataStoreSlot");
            feature.AddKnownType(@"System.SR,System.Threading.Thread", @"SR");
            feature.AddKnownType(@"System.Threading.CompressedStack,System.Threading.Thread", @"CompressedStack");
            feature.AddKnownType(@"System.Threading.Thread,System.Threading.Thread", @"Thread");
            feature.AddKnownType(@"System.Threading.ThreadExceptionEventArgs,System.Threading.Thread", @"ThreadExceptionEventArgs");
            feature.AddKnownType(@"System.Threading.ThreadExceptionEventHandler,System.Threading.Thread", @"ThreadExceptionEventHandler");
            feature.AddKnownType(@"Interop,System.Net.Primitives", @"Interop");
            feature.AddKnownType(@"Interop+IpHlpApi,System.Net.Primitives", @"IpHlpApi");
            feature.AddKnownType(@"Interop+IpHlpApi+FIXED_INFO,System.Net.Primitives", @"IpHlpApi.FIXED_INFO");
            feature.AddKnownType(@"Interop+IpHlpApi+IP_ADDR_STRING,System.Net.Primitives", @"IpHlpApi.IP_ADDR_STRING");
            feature.AddKnownType(@"Interop+Kernel32,System.Net.Primitives", @"Kernel32");
            feature.AddKnownType(@"FxResources.System.Net.Primitives.SR,System.Net.Primitives", @"FxResources.System.Net.Primitives.SR");
            feature.AddKnownType(@"Microsoft.Win32.SafeHandles.SafeLocalAllocHandle,System.Net.Primitives", @"Microsoft.Win32.SafeHandles.SafeLocalAllocHandle");
            feature.AddKnownType(@"System.IPv4AddressHelper,System.Net.Primitives", @"IPv4AddressHelper");
            feature.AddKnownType(@"System.IPv6AddressHelper,System.Net.Primitives", @"IPv6AddressHelper");
            feature.AddKnownType(@"System.StringExtensions,System.Net.Primitives", @"StringExtensions");
            feature.AddKnownType(@"System.NotImplemented,System.Net.Primitives", @"NotImplemented");
            feature.AddKnownType(@"System.SR,System.Net.Primitives", @"SR");
            feature.AddKnownType(@"System.IO.StringBuilderCache,System.Net.Primitives", @"StringBuilderCache");
            feature.AddKnownType(@"System.Security.Authentication.SslProtocols,System.Net.Primitives", @"SslProtocols");
            feature.AddKnownType(@"System.Security.Authentication.ExchangeAlgorithmType,System.Net.Primitives", @"ExchangeAlgorithmType");
            feature.AddKnownType(@"System.Security.Authentication.CipherAlgorithmType,System.Net.Primitives", @"CipherAlgorithmType");
            feature.AddKnownType(@"System.Security.Authentication.HashAlgorithmType,System.Net.Primitives", @"HashAlgorithmType");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.ChannelBinding,System.Net.Primitives", @"ChannelBinding");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.ChannelBindingKind,System.Net.Primitives", @"ChannelBindingKind");
            feature.AddKnownType(@"System.Net.AuthenticationSchemes,System.Net.Primitives", @"AuthenticationSchemes");
            feature.AddKnownType(@"System.Net.CookieVariant,System.Net.Primitives", @"CookieVariant");
            feature.AddKnownType(@"System.Net.Cookie,System.Net.Primitives", @"Cookie");
            feature.AddKnownType(@"System.Net.HeaderVariantInfo,System.Net.Primitives", @"HeaderVariantInfo");
            feature.AddKnownType(@"System.Net.CookieContainer,System.Net.Primitives", @"CookieContainer");
            feature.AddKnownType(@"System.Net.PathList,System.Net.Primitives", @"PathList");
            feature.AddKnownType(@"System.Net.CookieCollection,System.Net.Primitives", @"CookieCollection");
            feature.AddKnownType(@"System.Net.CookieCollection+Stamp,System.Net.Primitives", @"Stamp");
            feature.AddKnownType(@"System.Net.CookieException,System.Net.Primitives", @"CookieException");
            feature.AddKnownType(@"System.Net.CredentialCache,System.Net.Primitives", @"CredentialCache");
            feature.AddKnownType(@"System.Net.ICredentials,System.Net.Primitives", @"ICredentials");
            feature.AddKnownType(@"System.Net.ICredentialsByHost,System.Net.Primitives", @"ICredentialsByHost");
            feature.AddKnownType(@"System.Net.CredentialKey,System.Net.Primitives", @"CredentialKey");
            feature.AddKnownType(@"System.Net.SystemNetworkCredential,System.Net.Primitives", @"SystemNetworkCredential");
            feature.AddKnownType(@"System.Net.NetworkCredential,System.Net.Primitives", @"NetworkCredential");
            feature.AddKnownType(@"System.Net.CredentialHostKey,System.Net.Primitives", @"CredentialHostKey");
            feature.AddKnownType(@"System.Net.DecompressionMethods,System.Net.Primitives", @"DecompressionMethods");
            feature.AddKnownType(@"System.Net.DnsEndPoint,System.Net.Primitives", @"DnsEndPoint");
            feature.AddKnownType(@"System.Net.EndPoint,System.Net.Primitives", @"EndPoint");
            feature.AddKnownType(@"System.Net.HttpStatusCode,System.Net.Primitives", @"HttpStatusCode");
            feature.AddKnownType(@"System.Net.HttpVersion,System.Net.Primitives", @"HttpVersion");
            feature.AddKnownType(@"System.Net.IPAddressParser,System.Net.Primitives", @"IPAddressParser");
            feature.AddKnownType(@"System.Net.IWebProxy,System.Net.Primitives", @"IWebProxy");
            feature.AddKnownType(@"System.Net.NetEventSource,System.Net.Primitives", @"NetEventSource");
            feature.AddKnownType(@"System.Net.NetEventSource+Keywords,System.Net.Primitives", @"NetEventSource.Keywords");
            feature.AddKnownType(@"System.Net.TransportContext,System.Net.Primitives", @"TransportContext");
            feature.AddKnownType(@"System.Net.ByteOrder,System.Net.Primitives", @"ByteOrder");
            feature.AddKnownType(@"System.Net.CookieComparer,System.Net.Primitives", @"CookieComparer");
            feature.AddKnownType(@"System.Net.CookieToken,System.Net.Primitives", @"CookieToken");
            feature.AddKnownType(@"System.Net.CookieTokenizer,System.Net.Primitives", @"CookieTokenizer");
            feature.AddKnownType(@"System.Net.CookieParser,System.Net.Primitives", @"CookieParser");
            feature.AddKnownType(@"System.Net.TcpValidationHelpers,System.Net.Primitives", @"TcpValidationHelpers");
            feature.AddKnownType(@"System.Net.SocketAddress,System.Net.Primitives", @"SocketAddress");
            feature.AddKnownType(@"System.Net.SocketAddressPal,System.Net.Primitives", @"SocketAddressPal");
            feature.AddKnownType(@"System.Net.Cache.RequestCacheLevel,System.Net.Primitives", @"RequestCacheLevel");
            feature.AddKnownType(@"System.Net.Cache.RequestCachePolicy,System.Net.Primitives", @"RequestCachePolicy");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPAddressCollection,System.Net.Primitives", @"IPAddressCollection");
            feature.AddKnownType(@"System.Net.NetworkInformation.HostInformation,System.Net.Primitives", @"HostInformation");
            feature.AddKnownType(@"System.Net.NetworkInformation.HostInformationPal,System.Net.Primitives", @"HostInformationPal");
            feature.AddKnownType(@"System.Net.Security.AuthenticationLevel,System.Net.Primitives", @"AuthenticationLevel");
            feature.AddKnownType(@"System.Net.Security.SslPolicyErrors,System.Net.Primitives", @"SslPolicyErrors");
            feature.AddKnownType(@"System.Net.Sockets.SocketException,System.Net.Primitives", @"SocketException");
            feature.AddKnownType(@"System.Net.Sockets.AddressFamily,System.Net.Primitives", @"AddressFamily");
            feature.AddKnownType(@"System.Net.Sockets.SocketError,System.Net.Primitives", @"SocketError");
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
